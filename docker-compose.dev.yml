name: octopus

services:
  api:
    container_name: octopus_api
    build:
      context: .
    env_file:
      - src/.env
    command:
      sh -c "granian --interface asgi api.main:app --host 0.0.0.0 --port ${API_PORT} --reload"
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./src:/app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - octopus_net

  scenarios_worker:
    container_name: octopus_scenarios_worker
    build:
      context: .
    command: celery -A worker.celery worker -l debug -E -Q scenarios --logfile=${CELERY_LOG_PATH}/celery.log
    volumes:
      - ./src:/app
      - ./logs:${CELERY_LOG_PATH}
    env_file:
      - ./src/.env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - octopus_net

  migrations:
    container_name: octopus_migrations
    build:
      context: .
    env_file:
      - src/.env
    profiles: [ "tools" ]
    volumes:
      - ./src:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - octopus_net

  dev-tools:
    container_name: octopus_dev_tools
    build:
      context: .
    env_file:
      - src/.env
    profiles: [ "tools" ]
    volumes:
      - ./src:/app
    networks:
      - octopus_net

  db:
    container_name: octopus_db
    image: postgres:17.2-alpine3.20
    env_file:
      - src/.env
    restart: on-failure
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - octopus_pg-data:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DATABASE_NAME} -U ${DATABASE_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - octopus_net

  flower:
    container_name: octopus_celery_management
    image: mher/flower:latest
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - FLOWER_PORT=5555
    ports:
      - "${CELERY_MANAGEMENT_PORT}:5555"
    depends_on:
      - rabbitmq
    networks:
      - octopus_net

  rabbitmq:
    container_name: octopus_rabbitmq
    image: rabbitmq:4.0.5-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - octopus_net

volumes:
  octopus_pg-data:
  octopus_pg-admin-data:

networks:
  octopus_net: